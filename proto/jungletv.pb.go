// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.3
// source: jungletv.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EnqueueMediaTicketStatus int32

const (
	EnqueueMediaTicketStatus_ACTIVE  EnqueueMediaTicketStatus = 0
	EnqueueMediaTicketStatus_PAID    EnqueueMediaTicketStatus = 1
	EnqueueMediaTicketStatus_EXPIRED EnqueueMediaTicketStatus = 2
)

// Enum value maps for EnqueueMediaTicketStatus.
var (
	EnqueueMediaTicketStatus_name = map[int32]string{
		0: "ACTIVE",
		1: "PAID",
		2: "EXPIRED",
	}
	EnqueueMediaTicketStatus_value = map[string]int32{
		"ACTIVE":  0,
		"PAID":    1,
		"EXPIRED": 2,
	}
)

func (x EnqueueMediaTicketStatus) Enum() *EnqueueMediaTicketStatus {
	p := new(EnqueueMediaTicketStatus)
	*p = x
	return p
}

func (x EnqueueMediaTicketStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnqueueMediaTicketStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_jungletv_proto_enumTypes[0].Descriptor()
}

func (EnqueueMediaTicketStatus) Type() protoreflect.EnumType {
	return &file_jungletv_proto_enumTypes[0]
}

func (x EnqueueMediaTicketStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnqueueMediaTicketStatus.Descriptor instead.
func (EnqueueMediaTicketStatus) EnumDescriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{0}
}

type UserRole int32

const (
	UserRole_MODERATOR UserRole = 0
)

// Enum value maps for UserRole.
var (
	UserRole_name = map[int32]string{
		0: "MODERATOR",
	}
	UserRole_value = map[string]int32{
		"MODERATOR": 0,
	}
)

func (x UserRole) Enum() *UserRole {
	p := new(UserRole)
	*p = x
	return p
}

func (x UserRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserRole) Descriptor() protoreflect.EnumDescriptor {
	return file_jungletv_proto_enumTypes[1].Descriptor()
}

func (UserRole) Type() protoreflect.EnumType {
	return &file_jungletv_proto_enumTypes[1]
}

func (x UserRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserRole.Descriptor instead.
func (UserRole) EnumDescriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{1}
}

type ForcedTicketEnqueueType int32

const (
	ForcedTicketEnqueueType_ENQUEUE   ForcedTicketEnqueueType = 0
	ForcedTicketEnqueueType_PLAY_NEXT ForcedTicketEnqueueType = 1
	ForcedTicketEnqueueType_PLAY_NOW  ForcedTicketEnqueueType = 2
)

// Enum value maps for ForcedTicketEnqueueType.
var (
	ForcedTicketEnqueueType_name = map[int32]string{
		0: "ENQUEUE",
		1: "PLAY_NEXT",
		2: "PLAY_NOW",
	}
	ForcedTicketEnqueueType_value = map[string]int32{
		"ENQUEUE":   0,
		"PLAY_NEXT": 1,
		"PLAY_NOW":  2,
	}
)

func (x ForcedTicketEnqueueType) Enum() *ForcedTicketEnqueueType {
	p := new(ForcedTicketEnqueueType)
	*p = x
	return p
}

func (x ForcedTicketEnqueueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForcedTicketEnqueueType) Descriptor() protoreflect.EnumDescriptor {
	return file_jungletv_proto_enumTypes[2].Descriptor()
}

func (ForcedTicketEnqueueType) Type() protoreflect.EnumType {
	return &file_jungletv_proto_enumTypes[2]
}

func (x ForcedTicketEnqueueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForcedTicketEnqueueType.Descriptor instead.
func (ForcedTicketEnqueueType) EnumDescriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{2}
}

type ChatDisabledReason int32

const (
	ChatDisabledReason_UNSPECIFIED           ChatDisabledReason = 0
	ChatDisabledReason_MODERATOR_NOT_PRESENT ChatDisabledReason = 1
)

// Enum value maps for ChatDisabledReason.
var (
	ChatDisabledReason_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "MODERATOR_NOT_PRESENT",
	}
	ChatDisabledReason_value = map[string]int32{
		"UNSPECIFIED":           0,
		"MODERATOR_NOT_PRESENT": 1,
	}
)

func (x ChatDisabledReason) Enum() *ChatDisabledReason {
	p := new(ChatDisabledReason)
	*p = x
	return p
}

func (x ChatDisabledReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatDisabledReason) Descriptor() protoreflect.EnumDescriptor {
	return file_jungletv_proto_enumTypes[3].Descriptor()
}

func (ChatDisabledReason) Type() protoreflect.EnumType {
	return &file_jungletv_proto_enumTypes[3]
}

func (x ChatDisabledReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatDisabledReason.Descriptor instead.
func (ChatDisabledReason) EnumDescriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{3}
}

type AllowedVideoEnqueuingType int32

const (
	AllowedVideoEnqueuingType_DISABLED   AllowedVideoEnqueuingType = 0
	AllowedVideoEnqueuingType_STAFF_ONLY AllowedVideoEnqueuingType = 1
	AllowedVideoEnqueuingType_ENABLED    AllowedVideoEnqueuingType = 2
)

// Enum value maps for AllowedVideoEnqueuingType.
var (
	AllowedVideoEnqueuingType_name = map[int32]string{
		0: "DISABLED",
		1: "STAFF_ONLY",
		2: "ENABLED",
	}
	AllowedVideoEnqueuingType_value = map[string]int32{
		"DISABLED":   0,
		"STAFF_ONLY": 1,
		"ENABLED":    2,
	}
)

func (x AllowedVideoEnqueuingType) Enum() *AllowedVideoEnqueuingType {
	p := new(AllowedVideoEnqueuingType)
	*p = x
	return p
}

func (x AllowedVideoEnqueuingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AllowedVideoEnqueuingType) Descriptor() protoreflect.EnumDescriptor {
	return file_jungletv_proto_enumTypes[4].Descriptor()
}

func (AllowedVideoEnqueuingType) Type() protoreflect.EnumType {
	return &file_jungletv_proto_enumTypes[4]
}

func (x AllowedVideoEnqueuingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AllowedVideoEnqueuingType.Descriptor instead.
func (AllowedVideoEnqueuingType) EnumDescriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{4}
}

type PermissionLevel int32

const (
	PermissionLevel_UNAUTHENTICATED PermissionLevel = 0
	PermissionLevel_USER            PermissionLevel = 1
	PermissionLevel_ADMIN           PermissionLevel = 2
)

// Enum value maps for PermissionLevel.
var (
	PermissionLevel_name = map[int32]string{
		0: "UNAUTHENTICATED",
		1: "USER",
		2: "ADMIN",
	}
	PermissionLevel_value = map[string]int32{
		"UNAUTHENTICATED": 0,
		"USER":            1,
		"ADMIN":           2,
	}
)

func (x PermissionLevel) Enum() *PermissionLevel {
	p := new(PermissionLevel)
	*p = x
	return p
}

func (x PermissionLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PermissionLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_jungletv_proto_enumTypes[5].Descriptor()
}

func (PermissionLevel) Type() protoreflect.EnumType {
	return &file_jungletv_proto_enumTypes[5]
}

func (x PermissionLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PermissionLevel.Descriptor instead.
func (PermissionLevel) EnumDescriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{5}
}

type SignInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardAddress string `protobuf:"bytes,1,opt,name=reward_address,json=rewardAddress,proto3" json:"reward_address,omitempty"`
}

func (x *SignInRequest) Reset() {
	*x = SignInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInRequest) ProtoMessage() {}

func (x *SignInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInRequest.ProtoReflect.Descriptor instead.
func (*SignInRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{0}
}

func (x *SignInRequest) GetRewardAddress() string {
	if x != nil {
		return x.RewardAddress
	}
	return ""
}

type SignInProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Step:
	//	*SignInProgress_Verification
	//	*SignInProgress_Response
	//	*SignInProgress_Expired
	//	*SignInProgress_AccountUnopened
	Step isSignInProgress_Step `protobuf_oneof:"step"`
}

func (x *SignInProgress) Reset() {
	*x = SignInProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInProgress) ProtoMessage() {}

func (x *SignInProgress) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInProgress.ProtoReflect.Descriptor instead.
func (*SignInProgress) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{1}
}

func (m *SignInProgress) GetStep() isSignInProgress_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (x *SignInProgress) GetVerification() *SignInVerification {
	if x, ok := x.GetStep().(*SignInProgress_Verification); ok {
		return x.Verification
	}
	return nil
}

func (x *SignInProgress) GetResponse() *SignInResponse {
	if x, ok := x.GetStep().(*SignInProgress_Response); ok {
		return x.Response
	}
	return nil
}

func (x *SignInProgress) GetExpired() *SignInVerificationExpired {
	if x, ok := x.GetStep().(*SignInProgress_Expired); ok {
		return x.Expired
	}
	return nil
}

func (x *SignInProgress) GetAccountUnopened() *SignInAccountUnopened {
	if x, ok := x.GetStep().(*SignInProgress_AccountUnopened); ok {
		return x.AccountUnopened
	}
	return nil
}

type isSignInProgress_Step interface {
	isSignInProgress_Step()
}

type SignInProgress_Verification struct {
	Verification *SignInVerification `protobuf:"bytes,1,opt,name=verification,proto3,oneof"`
}

type SignInProgress_Response struct {
	Response *SignInResponse `protobuf:"bytes,2,opt,name=response,proto3,oneof"`
}

type SignInProgress_Expired struct {
	Expired *SignInVerificationExpired `protobuf:"bytes,3,opt,name=expired,proto3,oneof"`
}

type SignInProgress_AccountUnopened struct {
	AccountUnopened *SignInAccountUnopened `protobuf:"bytes,4,opt,name=account_unopened,json=accountUnopened,proto3,oneof"`
}

func (*SignInProgress_Verification) isSignInProgress_Step() {}

func (*SignInProgress_Response) isSignInProgress_Step() {}

func (*SignInProgress_Expired) isSignInProgress_Step() {}

func (*SignInProgress_AccountUnopened) isSignInProgress_Step() {}

type SignInVerification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationRepresentativeAddress string                 `protobuf:"bytes,1,opt,name=verification_representative_address,json=verificationRepresentativeAddress,proto3" json:"verification_representative_address,omitempty"`
	Expiration                        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *SignInVerification) Reset() {
	*x = SignInVerification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInVerification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInVerification) ProtoMessage() {}

func (x *SignInVerification) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInVerification.ProtoReflect.Descriptor instead.
func (*SignInVerification) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{2}
}

func (x *SignInVerification) GetVerificationRepresentativeAddress() string {
	if x != nil {
		return x.VerificationRepresentativeAddress
	}
	return ""
}

func (x *SignInVerification) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

type SignInAccountUnopened struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignInAccountUnopened) Reset() {
	*x = SignInAccountUnopened{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInAccountUnopened) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInAccountUnopened) ProtoMessage() {}

func (x *SignInAccountUnopened) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInAccountUnopened.ProtoReflect.Descriptor instead.
func (*SignInAccountUnopened) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{3}
}

type SignInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken       string                 `protobuf:"bytes,1,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	TokenExpiration *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=token_expiration,json=tokenExpiration,proto3" json:"token_expiration,omitempty"`
}

func (x *SignInResponse) Reset() {
	*x = SignInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInResponse) ProtoMessage() {}

func (x *SignInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInResponse.ProtoReflect.Descriptor instead.
func (*SignInResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{4}
}

func (x *SignInResponse) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *SignInResponse) GetTokenExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.TokenExpiration
	}
	return nil
}

type SignInVerificationExpired struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignInVerificationExpired) Reset() {
	*x = SignInVerificationExpired{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInVerificationExpired) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInVerificationExpired) ProtoMessage() {}

func (x *SignInVerificationExpired) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInVerificationExpired.ProtoReflect.Descriptor instead.
func (*SignInVerificationExpired) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{5}
}

type EnqueueYouTubeVideoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EnqueueYouTubeVideoData) Reset() {
	*x = EnqueueYouTubeVideoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueYouTubeVideoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueYouTubeVideoData) ProtoMessage() {}

func (x *EnqueueYouTubeVideoData) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueYouTubeVideoData.ProtoReflect.Descriptor instead.
func (*EnqueueYouTubeVideoData) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{6}
}

func (x *EnqueueYouTubeVideoData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// EnqueueStubData allows us to prepare and confirm that polymorphism is working properly
type EnqueueStubData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnqueueStubData) Reset() {
	*x = EnqueueStubData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueStubData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueStubData) ProtoMessage() {}

func (x *EnqueueStubData) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueStubData.ProtoReflect.Descriptor instead.
func (*EnqueueStubData) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{7}
}

type EnqueueMediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unskippable bool `protobuf:"varint,1,opt,name=unskippable,proto3" json:"unskippable,omitempty"`
	// Types that are assignable to MediaInfo:
	//	*EnqueueMediaRequest_StubData
	//	*EnqueueMediaRequest_YoutubeVideoData
	MediaInfo isEnqueueMediaRequest_MediaInfo `protobuf_oneof:"media_info"`
}

func (x *EnqueueMediaRequest) Reset() {
	*x = EnqueueMediaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueMediaRequest) ProtoMessage() {}

func (x *EnqueueMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueMediaRequest.ProtoReflect.Descriptor instead.
func (*EnqueueMediaRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{8}
}

func (x *EnqueueMediaRequest) GetUnskippable() bool {
	if x != nil {
		return x.Unskippable
	}
	return false
}

func (m *EnqueueMediaRequest) GetMediaInfo() isEnqueueMediaRequest_MediaInfo {
	if m != nil {
		return m.MediaInfo
	}
	return nil
}

func (x *EnqueueMediaRequest) GetStubData() *EnqueueStubData {
	if x, ok := x.GetMediaInfo().(*EnqueueMediaRequest_StubData); ok {
		return x.StubData
	}
	return nil
}

func (x *EnqueueMediaRequest) GetYoutubeVideoData() *EnqueueYouTubeVideoData {
	if x, ok := x.GetMediaInfo().(*EnqueueMediaRequest_YoutubeVideoData); ok {
		return x.YoutubeVideoData
	}
	return nil
}

type isEnqueueMediaRequest_MediaInfo interface {
	isEnqueueMediaRequest_MediaInfo()
}

type EnqueueMediaRequest_StubData struct {
	StubData *EnqueueStubData `protobuf:"bytes,2,opt,name=stub_data,json=stubData,proto3,oneof"`
}

type EnqueueMediaRequest_YoutubeVideoData struct {
	YoutubeVideoData *EnqueueYouTubeVideoData `protobuf:"bytes,3,opt,name=youtube_video_data,json=youtubeVideoData,proto3,oneof"`
}

func (*EnqueueMediaRequest_StubData) isEnqueueMediaRequest_MediaInfo() {}

func (*EnqueueMediaRequest_YoutubeVideoData) isEnqueueMediaRequest_MediaInfo() {}

type EnqueueMediaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to EnqueueResponse:
	//	*EnqueueMediaResponse_Ticket
	//	*EnqueueMediaResponse_Failure
	EnqueueResponse isEnqueueMediaResponse_EnqueueResponse `protobuf_oneof:"enqueue_response"`
}

func (x *EnqueueMediaResponse) Reset() {
	*x = EnqueueMediaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueMediaResponse) ProtoMessage() {}

func (x *EnqueueMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueMediaResponse.ProtoReflect.Descriptor instead.
func (*EnqueueMediaResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{9}
}

func (m *EnqueueMediaResponse) GetEnqueueResponse() isEnqueueMediaResponse_EnqueueResponse {
	if m != nil {
		return m.EnqueueResponse
	}
	return nil
}

func (x *EnqueueMediaResponse) GetTicket() *EnqueueMediaTicket {
	if x, ok := x.GetEnqueueResponse().(*EnqueueMediaResponse_Ticket); ok {
		return x.Ticket
	}
	return nil
}

func (x *EnqueueMediaResponse) GetFailure() *EnqueueMediaFailure {
	if x, ok := x.GetEnqueueResponse().(*EnqueueMediaResponse_Failure); ok {
		return x.Failure
	}
	return nil
}

type isEnqueueMediaResponse_EnqueueResponse interface {
	isEnqueueMediaResponse_EnqueueResponse()
}

type EnqueueMediaResponse_Ticket struct {
	Ticket *EnqueueMediaTicket `protobuf:"bytes,1,opt,name=ticket,proto3,oneof"`
}

type EnqueueMediaResponse_Failure struct {
	Failure *EnqueueMediaFailure `protobuf:"bytes,2,opt,name=failure,proto3,oneof"`
}

func (*EnqueueMediaResponse_Ticket) isEnqueueMediaResponse_EnqueueResponse() {}

func (*EnqueueMediaResponse_Failure) isEnqueueMediaResponse_EnqueueResponse() {}

type EnqueueMediaFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailureReason string `protobuf:"bytes,1,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
}

func (x *EnqueueMediaFailure) Reset() {
	*x = EnqueueMediaFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueMediaFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueMediaFailure) ProtoMessage() {}

func (x *EnqueueMediaFailure) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueMediaFailure.ProtoReflect.Descriptor instead.
func (*EnqueueMediaFailure) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{10}
}

func (x *EnqueueMediaFailure) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

type EnqueueMediaTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                            string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status                        EnqueueMediaTicketStatus `protobuf:"varint,2,opt,name=status,proto3,enum=jungletv.EnqueueMediaTicketStatus" json:"status,omitempty"`
	PaymentAddress                string                   `protobuf:"bytes,3,opt,name=payment_address,json=paymentAddress,proto3" json:"payment_address,omitempty"`
	EnqueuePrice                  string                   `protobuf:"bytes,4,opt,name=enqueue_price,json=enqueuePrice,proto3" json:"enqueue_price,omitempty"`
	PlayNextPrice                 string                   `protobuf:"bytes,5,opt,name=play_next_price,json=playNextPrice,proto3" json:"play_next_price,omitempty"`
	PlayNowPrice                  string                   `protobuf:"bytes,6,opt,name=play_now_price,json=playNowPrice,proto3" json:"play_now_price,omitempty"`
	Expiration                    *timestamppb.Timestamp   `protobuf:"bytes,7,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Unskippable                   bool                     `protobuf:"varint,8,opt,name=unskippable,proto3" json:"unskippable,omitempty"`
	CurrentlyPlayingIsUnskippable bool                     `protobuf:"varint,9,opt,name=currently_playing_is_unskippable,json=currentlyPlayingIsUnskippable,proto3" json:"currently_playing_is_unskippable,omitempty"`
	// Types that are assignable to MediaInfo:
	//	*EnqueueMediaTicket_YoutubeVideoData
	MediaInfo isEnqueueMediaTicket_MediaInfo `protobuf_oneof:"media_info"`
}

func (x *EnqueueMediaTicket) Reset() {
	*x = EnqueueMediaTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueMediaTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueMediaTicket) ProtoMessage() {}

func (x *EnqueueMediaTicket) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueMediaTicket.ProtoReflect.Descriptor instead.
func (*EnqueueMediaTicket) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{11}
}

func (x *EnqueueMediaTicket) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EnqueueMediaTicket) GetStatus() EnqueueMediaTicketStatus {
	if x != nil {
		return x.Status
	}
	return EnqueueMediaTicketStatus_ACTIVE
}

func (x *EnqueueMediaTicket) GetPaymentAddress() string {
	if x != nil {
		return x.PaymentAddress
	}
	return ""
}

func (x *EnqueueMediaTicket) GetEnqueuePrice() string {
	if x != nil {
		return x.EnqueuePrice
	}
	return ""
}

func (x *EnqueueMediaTicket) GetPlayNextPrice() string {
	if x != nil {
		return x.PlayNextPrice
	}
	return ""
}

func (x *EnqueueMediaTicket) GetPlayNowPrice() string {
	if x != nil {
		return x.PlayNowPrice
	}
	return ""
}

func (x *EnqueueMediaTicket) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *EnqueueMediaTicket) GetUnskippable() bool {
	if x != nil {
		return x.Unskippable
	}
	return false
}

func (x *EnqueueMediaTicket) GetCurrentlyPlayingIsUnskippable() bool {
	if x != nil {
		return x.CurrentlyPlayingIsUnskippable
	}
	return false
}

func (m *EnqueueMediaTicket) GetMediaInfo() isEnqueueMediaTicket_MediaInfo {
	if m != nil {
		return m.MediaInfo
	}
	return nil
}

func (x *EnqueueMediaTicket) GetYoutubeVideoData() *QueueYouTubeVideoData {
	if x, ok := x.GetMediaInfo().(*EnqueueMediaTicket_YoutubeVideoData); ok {
		return x.YoutubeVideoData
	}
	return nil
}

type isEnqueueMediaTicket_MediaInfo interface {
	isEnqueueMediaTicket_MediaInfo()
}

type EnqueueMediaTicket_YoutubeVideoData struct {
	YoutubeVideoData *QueueYouTubeVideoData `protobuf:"bytes,10,opt,name=youtube_video_data,json=youtubeVideoData,proto3,oneof"`
}

func (*EnqueueMediaTicket_YoutubeVideoData) isEnqueueMediaTicket_MediaInfo() {}

type MonitorTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
}

func (x *MonitorTicketRequest) Reset() {
	*x = MonitorTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorTicketRequest) ProtoMessage() {}

func (x *MonitorTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorTicketRequest.ProtoReflect.Descriptor instead.
func (*MonitorTicketRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{12}
}

func (x *MonitorTicketRequest) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type ConsumeMediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParticipateInPow bool `protobuf:"varint,1,opt,name=participate_in_pow,json=participateInPow,proto3" json:"participate_in_pow,omitempty"`
}

func (x *ConsumeMediaRequest) Reset() {
	*x = ConsumeMediaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumeMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeMediaRequest) ProtoMessage() {}

func (x *ConsumeMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeMediaRequest.ProtoReflect.Descriptor instead.
func (*ConsumeMediaRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{13}
}

func (x *ConsumeMediaRequest) GetParticipateInPow() bool {
	if x != nil {
		return x.ParticipateInPow
	}
	return false
}

// NowPlayingStubData allows us to prepare and confirm that polymorphism is working properly
type NowPlayingStubData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NowPlayingStubData) Reset() {
	*x = NowPlayingStubData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NowPlayingStubData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NowPlayingStubData) ProtoMessage() {}

func (x *NowPlayingStubData) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NowPlayingStubData.ProtoReflect.Descriptor instead.
func (*NowPlayingStubData) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{14}
}

type NowPlayingYouTubeVideoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NowPlayingYouTubeVideoData) Reset() {
	*x = NowPlayingYouTubeVideoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NowPlayingYouTubeVideoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NowPlayingYouTubeVideoData) ProtoMessage() {}

func (x *NowPlayingYouTubeVideoData) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NowPlayingYouTubeVideoData.ProtoReflect.Descriptor instead.
func (*NowPlayingYouTubeVideoData) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{15}
}

func (x *NowPlayingYouTubeVideoData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MediaConsumptionCheckpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaPresent      bool                 `protobuf:"varint,1,opt,name=media_present,json=mediaPresent,proto3" json:"media_present,omitempty"`
	CurrentPosition   *durationpb.Duration `protobuf:"bytes,2,opt,name=current_position,json=currentPosition,proto3" json:"current_position,omitempty"`
	RequestedBy       *User                `protobuf:"bytes,3,opt,name=requested_by,json=requestedBy,proto3" json:"requested_by,omitempty"`
	RequestCost       string               `protobuf:"bytes,4,opt,name=request_cost,json=requestCost,proto3" json:"request_cost,omitempty"`
	CurrentlyWatching uint32               `protobuf:"varint,5,opt,name=currently_watching,json=currentlyWatching,proto3" json:"currently_watching,omitempty"`
	Reward            *string              `protobuf:"bytes,6,opt,name=reward,proto3,oneof" json:"reward,omitempty"`
	ActivityChallenge *ActivityChallenge   `protobuf:"bytes,7,opt,name=activity_challenge,json=activityChallenge,proto3,oneof" json:"activity_challenge,omitempty"`
	PowTask           *ProofOfWorkTask     `protobuf:"bytes,8,opt,name=pow_task,json=powTask,proto3,oneof" json:"pow_task,omitempty"`
	// Types that are assignable to MediaInfo:
	//	*MediaConsumptionCheckpoint_StubData
	//	*MediaConsumptionCheckpoint_YoutubeVideoData
	MediaInfo isMediaConsumptionCheckpoint_MediaInfo `protobuf_oneof:"media_info"`
}

func (x *MediaConsumptionCheckpoint) Reset() {
	*x = MediaConsumptionCheckpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaConsumptionCheckpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaConsumptionCheckpoint) ProtoMessage() {}

func (x *MediaConsumptionCheckpoint) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaConsumptionCheckpoint.ProtoReflect.Descriptor instead.
func (*MediaConsumptionCheckpoint) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{16}
}

func (x *MediaConsumptionCheckpoint) GetMediaPresent() bool {
	if x != nil {
		return x.MediaPresent
	}
	return false
}

func (x *MediaConsumptionCheckpoint) GetCurrentPosition() *durationpb.Duration {
	if x != nil {
		return x.CurrentPosition
	}
	return nil
}

func (x *MediaConsumptionCheckpoint) GetRequestedBy() *User {
	if x != nil {
		return x.RequestedBy
	}
	return nil
}

func (x *MediaConsumptionCheckpoint) GetRequestCost() string {
	if x != nil {
		return x.RequestCost
	}
	return ""
}

func (x *MediaConsumptionCheckpoint) GetCurrentlyWatching() uint32 {
	if x != nil {
		return x.CurrentlyWatching
	}
	return 0
}

func (x *MediaConsumptionCheckpoint) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *MediaConsumptionCheckpoint) GetActivityChallenge() *ActivityChallenge {
	if x != nil {
		return x.ActivityChallenge
	}
	return nil
}

func (x *MediaConsumptionCheckpoint) GetPowTask() *ProofOfWorkTask {
	if x != nil {
		return x.PowTask
	}
	return nil
}

func (m *MediaConsumptionCheckpoint) GetMediaInfo() isMediaConsumptionCheckpoint_MediaInfo {
	if m != nil {
		return m.MediaInfo
	}
	return nil
}

func (x *MediaConsumptionCheckpoint) GetStubData() *NowPlayingStubData {
	if x, ok := x.GetMediaInfo().(*MediaConsumptionCheckpoint_StubData); ok {
		return x.StubData
	}
	return nil
}

func (x *MediaConsumptionCheckpoint) GetYoutubeVideoData() *NowPlayingYouTubeVideoData {
	if x, ok := x.GetMediaInfo().(*MediaConsumptionCheckpoint_YoutubeVideoData); ok {
		return x.YoutubeVideoData
	}
	return nil
}

type isMediaConsumptionCheckpoint_MediaInfo interface {
	isMediaConsumptionCheckpoint_MediaInfo()
}

type MediaConsumptionCheckpoint_StubData struct {
	StubData *NowPlayingStubData `protobuf:"bytes,9,opt,name=stub_data,json=stubData,proto3,oneof"`
}

type MediaConsumptionCheckpoint_YoutubeVideoData struct {
	YoutubeVideoData *NowPlayingYouTubeVideoData `protobuf:"bytes,10,opt,name=youtube_video_data,json=youtubeVideoData,proto3,oneof"`
}

func (*MediaConsumptionCheckpoint_StubData) isMediaConsumptionCheckpoint_MediaInfo() {}

func (*MediaConsumptionCheckpoint_YoutubeVideoData) isMediaConsumptionCheckpoint_MediaInfo() {}

type ActivityChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ActivityChallenge) Reset() {
	*x = ActivityChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityChallenge) ProtoMessage() {}

func (x *ActivityChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityChallenge.ProtoReflect.Descriptor instead.
func (*ActivityChallenge) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{17}
}

func (x *ActivityChallenge) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ActivityChallenge) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ProofOfWorkTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target   []byte `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Previous []byte `protobuf:"bytes,2,opt,name=previous,proto3" json:"previous,omitempty"`
}

func (x *ProofOfWorkTask) Reset() {
	*x = ProofOfWorkTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProofOfWorkTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofOfWorkTask) ProtoMessage() {}

func (x *ProofOfWorkTask) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofOfWorkTask.ProtoReflect.Descriptor instead.
func (*ProofOfWorkTask) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{18}
}

func (x *ProofOfWorkTask) GetTarget() []byte {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *ProofOfWorkTask) GetPrevious() []byte {
	if x != nil {
		return x.Previous
	}
	return nil
}

type MonitorQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MonitorQueueRequest) Reset() {
	*x = MonitorQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorQueueRequest) ProtoMessage() {}

func (x *MonitorQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorQueueRequest.ProtoReflect.Descriptor instead.
func (*MonitorQueueRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{19}
}

type Queue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries     []*QueueEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	IsHeartbeat bool          `protobuf:"varint,2,opt,name=is_heartbeat,json=isHeartbeat,proto3" json:"is_heartbeat,omitempty"`
}

func (x *Queue) Reset() {
	*x = Queue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Queue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Queue) ProtoMessage() {}

func (x *Queue) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Queue.ProtoReflect.Descriptor instead.
func (*Queue) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{20}
}

func (x *Queue) GetEntries() []*QueueEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *Queue) GetIsHeartbeat() bool {
	if x != nil {
		return x.IsHeartbeat
	}
	return false
}

type QueueYouTubeVideoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title        string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ThumbnailUrl string `protobuf:"bytes,3,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	ChannelTitle string `protobuf:"bytes,4,opt,name=channel_title,json=channelTitle,proto3" json:"channel_title,omitempty"`
}

func (x *QueueYouTubeVideoData) Reset() {
	*x = QueueYouTubeVideoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueYouTubeVideoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueYouTubeVideoData) ProtoMessage() {}

func (x *QueueYouTubeVideoData) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueYouTubeVideoData.ProtoReflect.Descriptor instead.
func (*QueueYouTubeVideoData) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{21}
}

func (x *QueueYouTubeVideoData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QueueYouTubeVideoData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QueueYouTubeVideoData) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *QueueYouTubeVideoData) GetChannelTitle() string {
	if x != nil {
		return x.ChannelTitle
	}
	return ""
}

type QueueEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RequestedBy *User                `protobuf:"bytes,2,opt,name=requested_by,json=requestedBy,proto3" json:"requested_by,omitempty"`
	RequestCost string               `protobuf:"bytes,3,opt,name=request_cost,json=requestCost,proto3" json:"request_cost,omitempty"`
	Length      *durationpb.Duration `protobuf:"bytes,4,opt,name=length,proto3" json:"length,omitempty"`
	Unskippable bool                 `protobuf:"varint,5,opt,name=unskippable,proto3" json:"unskippable,omitempty"`
	// Types that are assignable to MediaInfo:
	//	*QueueEntry_YoutubeVideoData
	MediaInfo isQueueEntry_MediaInfo `protobuf_oneof:"media_info"`
}

func (x *QueueEntry) Reset() {
	*x = QueueEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueEntry) ProtoMessage() {}

func (x *QueueEntry) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueEntry.ProtoReflect.Descriptor instead.
func (*QueueEntry) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{22}
}

func (x *QueueEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QueueEntry) GetRequestedBy() *User {
	if x != nil {
		return x.RequestedBy
	}
	return nil
}

func (x *QueueEntry) GetRequestCost() string {
	if x != nil {
		return x.RequestCost
	}
	return ""
}

func (x *QueueEntry) GetLength() *durationpb.Duration {
	if x != nil {
		return x.Length
	}
	return nil
}

func (x *QueueEntry) GetUnskippable() bool {
	if x != nil {
		return x.Unskippable
	}
	return false
}

func (m *QueueEntry) GetMediaInfo() isQueueEntry_MediaInfo {
	if m != nil {
		return m.MediaInfo
	}
	return nil
}

func (x *QueueEntry) GetYoutubeVideoData() *QueueYouTubeVideoData {
	if x, ok := x.GetMediaInfo().(*QueueEntry_YoutubeVideoData); ok {
		return x.YoutubeVideoData
	}
	return nil
}

type isQueueEntry_MediaInfo interface {
	isQueueEntry_MediaInfo()
}

type QueueEntry_YoutubeVideoData struct {
	YoutubeVideoData *QueueYouTubeVideoData `protobuf:"bytes,6,opt,name=youtube_video_data,json=youtubeVideoData,proto3,oneof"`
}

func (*QueueEntry_YoutubeVideoData) isQueueEntry_MediaInfo() {}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string     `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Roles   []UserRole `protobuf:"varint,2,rep,packed,name=roles,proto3,enum=jungletv.UserRole" json:"roles,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{23}
}

func (x *User) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *User) GetRoles() []UserRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

type RewardInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RewardInfoRequest) Reset() {
	*x = RewardInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardInfoRequest) ProtoMessage() {}

func (x *RewardInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardInfoRequest.ProtoReflect.Descriptor instead.
func (*RewardInfoRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{24}
}

type RewardInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardAddress string `protobuf:"bytes,1,opt,name=reward_address,json=rewardAddress,proto3" json:"reward_address,omitempty"`
}

func (x *RewardInfoResponse) Reset() {
	*x = RewardInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardInfoResponse) ProtoMessage() {}

func (x *RewardInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardInfoResponse.ProtoReflect.Descriptor instead.
func (*RewardInfoResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{25}
}

func (x *RewardInfoResponse) GetRewardAddress() string {
	if x != nil {
		return x.RewardAddress
	}
	return ""
}

type RemoveQueueEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveQueueEntryRequest) Reset() {
	*x = RemoveQueueEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveQueueEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveQueueEntryRequest) ProtoMessage() {}

func (x *RemoveQueueEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveQueueEntryRequest.ProtoReflect.Descriptor instead.
func (*RemoveQueueEntryRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{26}
}

func (x *RemoveQueueEntryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveQueueEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveQueueEntryResponse) Reset() {
	*x = RemoveQueueEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveQueueEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveQueueEntryResponse) ProtoMessage() {}

func (x *RemoveQueueEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveQueueEntryResponse.ProtoReflect.Descriptor instead.
func (*RemoveQueueEntryResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{27}
}

type ForciblyEnqueueTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EnqueueType ForcedTicketEnqueueType `protobuf:"varint,2,opt,name=enqueue_type,json=enqueueType,proto3,enum=jungletv.ForcedTicketEnqueueType" json:"enqueue_type,omitempty"`
}

func (x *ForciblyEnqueueTicketRequest) Reset() {
	*x = ForciblyEnqueueTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForciblyEnqueueTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForciblyEnqueueTicketRequest) ProtoMessage() {}

func (x *ForciblyEnqueueTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForciblyEnqueueTicketRequest.ProtoReflect.Descriptor instead.
func (*ForciblyEnqueueTicketRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{28}
}

func (x *ForciblyEnqueueTicketRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ForciblyEnqueueTicketRequest) GetEnqueueType() ForcedTicketEnqueueType {
	if x != nil {
		return x.EnqueueType
	}
	return ForcedTicketEnqueueType_ENQUEUE
}

type ForciblyEnqueueTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ForciblyEnqueueTicketResponse) Reset() {
	*x = ForciblyEnqueueTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForciblyEnqueueTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForciblyEnqueueTicketResponse) ProtoMessage() {}

func (x *ForciblyEnqueueTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForciblyEnqueueTicketResponse.ProtoReflect.Descriptor instead.
func (*ForciblyEnqueueTicketResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{29}
}

type SubmitActivityChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Challenge       string `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
	CaptchaResponse string `protobuf:"bytes,2,opt,name=captcha_response,json=captchaResponse,proto3" json:"captcha_response,omitempty"`
	Trusted         bool   `protobuf:"varint,3,opt,name=trusted,proto3" json:"trusted,omitempty"`
}

func (x *SubmitActivityChallengeRequest) Reset() {
	*x = SubmitActivityChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitActivityChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitActivityChallengeRequest) ProtoMessage() {}

func (x *SubmitActivityChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitActivityChallengeRequest.ProtoReflect.Descriptor instead.
func (*SubmitActivityChallengeRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{30}
}

func (x *SubmitActivityChallengeRequest) GetChallenge() string {
	if x != nil {
		return x.Challenge
	}
	return ""
}

func (x *SubmitActivityChallengeRequest) GetCaptchaResponse() string {
	if x != nil {
		return x.CaptchaResponse
	}
	return ""
}

func (x *SubmitActivityChallengeRequest) GetTrusted() bool {
	if x != nil {
		return x.Trusted
	}
	return false
}

type SubmitActivityChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubmitActivityChallengeResponse) Reset() {
	*x = SubmitActivityChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitActivityChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitActivityChallengeResponse) ProtoMessage() {}

func (x *SubmitActivityChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitActivityChallengeResponse.ProtoReflect.Descriptor instead.
func (*SubmitActivityChallengeResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{31}
}

type ConsumeChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitialHistorySize uint32 `protobuf:"varint,1,opt,name=initial_history_size,json=initialHistorySize,proto3" json:"initial_history_size,omitempty"`
}

func (x *ConsumeChatRequest) Reset() {
	*x = ConsumeChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumeChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeChatRequest) ProtoMessage() {}

func (x *ConsumeChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeChatRequest.ProtoReflect.Descriptor instead.
func (*ConsumeChatRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{32}
}

func (x *ConsumeChatRequest) GetInitialHistorySize() uint32 {
	if x != nil {
		return x.InitialHistorySize
	}
	return 0
}

type ChatUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//	*ChatUpdate_Disabled
	//	*ChatUpdate_Enabled
	//	*ChatUpdate_MessageCreated
	//	*ChatUpdate_MessageDeleted
	//	*ChatUpdate_Heartbeat
	Event isChatUpdate_Event `protobuf_oneof:"event"`
}

func (x *ChatUpdate) Reset() {
	*x = ChatUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatUpdate) ProtoMessage() {}

func (x *ChatUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatUpdate.ProtoReflect.Descriptor instead.
func (*ChatUpdate) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{33}
}

func (m *ChatUpdate) GetEvent() isChatUpdate_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *ChatUpdate) GetDisabled() *ChatDisabledEvent {
	if x, ok := x.GetEvent().(*ChatUpdate_Disabled); ok {
		return x.Disabled
	}
	return nil
}

func (x *ChatUpdate) GetEnabled() *ChatEnabledEvent {
	if x, ok := x.GetEvent().(*ChatUpdate_Enabled); ok {
		return x.Enabled
	}
	return nil
}

func (x *ChatUpdate) GetMessageCreated() *ChatMessageCreatedEvent {
	if x, ok := x.GetEvent().(*ChatUpdate_MessageCreated); ok {
		return x.MessageCreated
	}
	return nil
}

func (x *ChatUpdate) GetMessageDeleted() *ChatMessageDeletedEvent {
	if x, ok := x.GetEvent().(*ChatUpdate_MessageDeleted); ok {
		return x.MessageDeleted
	}
	return nil
}

func (x *ChatUpdate) GetHeartbeat() *ChatHeartbeatEvent {
	if x, ok := x.GetEvent().(*ChatUpdate_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

type isChatUpdate_Event interface {
	isChatUpdate_Event()
}

type ChatUpdate_Disabled struct {
	Disabled *ChatDisabledEvent `protobuf:"bytes,1,opt,name=disabled,proto3,oneof"`
}

type ChatUpdate_Enabled struct {
	Enabled *ChatEnabledEvent `protobuf:"bytes,2,opt,name=enabled,proto3,oneof"`
}

type ChatUpdate_MessageCreated struct {
	MessageCreated *ChatMessageCreatedEvent `protobuf:"bytes,3,opt,name=message_created,json=messageCreated,proto3,oneof"`
}

type ChatUpdate_MessageDeleted struct {
	MessageDeleted *ChatMessageDeletedEvent `protobuf:"bytes,4,opt,name=message_deleted,json=messageDeleted,proto3,oneof"`
}

type ChatUpdate_Heartbeat struct {
	Heartbeat *ChatHeartbeatEvent `protobuf:"bytes,5,opt,name=heartbeat,proto3,oneof"`
}

func (*ChatUpdate_Disabled) isChatUpdate_Event() {}

func (*ChatUpdate_Enabled) isChatUpdate_Event() {}

func (*ChatUpdate_MessageCreated) isChatUpdate_Event() {}

func (*ChatUpdate_MessageDeleted) isChatUpdate_Event() {}

func (*ChatUpdate_Heartbeat) isChatUpdate_Event() {}

type ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Types that are assignable to Message:
	//	*ChatMessage_UserMessage
	//	*ChatMessage_SystemMessage
	Message   isChatMessage_Message `protobuf_oneof:"message"`
	Reference *ChatMessage          `protobuf:"bytes,5,opt,name=reference,proto3,oneof" json:"reference,omitempty"`
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{34}
}

func (x *ChatMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChatMessage) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (m *ChatMessage) GetMessage() isChatMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ChatMessage) GetUserMessage() *UserChatMessage {
	if x, ok := x.GetMessage().(*ChatMessage_UserMessage); ok {
		return x.UserMessage
	}
	return nil
}

func (x *ChatMessage) GetSystemMessage() *SystemChatMessage {
	if x, ok := x.GetMessage().(*ChatMessage_SystemMessage); ok {
		return x.SystemMessage
	}
	return nil
}

func (x *ChatMessage) GetReference() *ChatMessage {
	if x != nil {
		return x.Reference
	}
	return nil
}

type isChatMessage_Message interface {
	isChatMessage_Message()
}

type ChatMessage_UserMessage struct {
	UserMessage *UserChatMessage `protobuf:"bytes,3,opt,name=user_message,json=userMessage,proto3,oneof"`
}

type ChatMessage_SystemMessage struct {
	SystemMessage *SystemChatMessage `protobuf:"bytes,4,opt,name=system_message,json=systemMessage,proto3,oneof"`
}

func (*ChatMessage_UserMessage) isChatMessage_Message() {}

func (*ChatMessage_SystemMessage) isChatMessage_Message() {}

type UserChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Author  *User  `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *UserChatMessage) Reset() {
	*x = UserChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChatMessage) ProtoMessage() {}

func (x *UserChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChatMessage.ProtoReflect.Descriptor instead.
func (*UserChatMessage) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{35}
}

func (x *UserChatMessage) GetAuthor() *User {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *UserChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SystemChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *SystemChatMessage) Reset() {
	*x = SystemChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemChatMessage) ProtoMessage() {}

func (x *SystemChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemChatMessage.ProtoReflect.Descriptor instead.
func (*SystemChatMessage) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{36}
}

func (x *SystemChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ChatDisabledEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason ChatDisabledReason `protobuf:"varint,1,opt,name=reason,proto3,enum=jungletv.ChatDisabledReason" json:"reason,omitempty"`
}

func (x *ChatDisabledEvent) Reset() {
	*x = ChatDisabledEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatDisabledEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatDisabledEvent) ProtoMessage() {}

func (x *ChatDisabledEvent) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatDisabledEvent.ProtoReflect.Descriptor instead.
func (*ChatDisabledEvent) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{37}
}

func (x *ChatDisabledEvent) GetReason() ChatDisabledReason {
	if x != nil {
		return x.Reason
	}
	return ChatDisabledReason_UNSPECIFIED
}

type ChatEnabledEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChatEnabledEvent) Reset() {
	*x = ChatEnabledEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatEnabledEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatEnabledEvent) ProtoMessage() {}

func (x *ChatEnabledEvent) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatEnabledEvent.ProtoReflect.Descriptor instead.
func (*ChatEnabledEvent) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{38}
}

type ChatMessageCreatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *ChatMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ChatMessageCreatedEvent) Reset() {
	*x = ChatMessageCreatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageCreatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageCreatedEvent) ProtoMessage() {}

func (x *ChatMessageCreatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageCreatedEvent.ProtoReflect.Descriptor instead.
func (*ChatMessageCreatedEvent) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{39}
}

func (x *ChatMessageCreatedEvent) GetMessage() *ChatMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type ChatMessageDeletedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ChatMessageDeletedEvent) Reset() {
	*x = ChatMessageDeletedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageDeletedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageDeletedEvent) ProtoMessage() {}

func (x *ChatMessageDeletedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageDeletedEvent.ProtoReflect.Descriptor instead.
func (*ChatMessageDeletedEvent) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{40}
}

func (x *ChatMessageDeletedEvent) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ChatHeartbeatEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence uint32 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *ChatHeartbeatEvent) Reset() {
	*x = ChatHeartbeatEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatHeartbeatEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatHeartbeatEvent) ProtoMessage() {}

func (x *ChatHeartbeatEvent) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatHeartbeatEvent.ProtoReflect.Descriptor instead.
func (*ChatHeartbeatEvent) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{41}
}

func (x *ChatHeartbeatEvent) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type SendChatMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content          string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Trusted          bool   `protobuf:"varint,2,opt,name=trusted,proto3" json:"trusted,omitempty"`
	ReplyReferenceId *int64 `protobuf:"varint,3,opt,name=reply_reference_id,json=replyReferenceId,proto3,oneof" json:"reply_reference_id,omitempty"`
}

func (x *SendChatMessageRequest) Reset() {
	*x = SendChatMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChatMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChatMessageRequest) ProtoMessage() {}

func (x *SendChatMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChatMessageRequest.ProtoReflect.Descriptor instead.
func (*SendChatMessageRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{42}
}

func (x *SendChatMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendChatMessageRequest) GetTrusted() bool {
	if x != nil {
		return x.Trusted
	}
	return false
}

func (x *SendChatMessageRequest) GetReplyReferenceId() int64 {
	if x != nil && x.ReplyReferenceId != nil {
		return *x.ReplyReferenceId
	}
	return 0
}

type SendChatMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SendChatMessageResponse) Reset() {
	*x = SendChatMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChatMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChatMessageResponse) ProtoMessage() {}

func (x *SendChatMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChatMessageResponse.ProtoReflect.Descriptor instead.
func (*SendChatMessageResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{43}
}

func (x *SendChatMessageResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RemoveChatMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveChatMessageRequest) Reset() {
	*x = RemoveChatMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveChatMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveChatMessageRequest) ProtoMessage() {}

func (x *RemoveChatMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveChatMessageRequest.ProtoReflect.Descriptor instead.
func (*RemoveChatMessageRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{44}
}

func (x *RemoveChatMessageRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RemoveChatMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveChatMessageResponse) Reset() {
	*x = RemoveChatMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveChatMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveChatMessageResponse) ProtoMessage() {}

func (x *RemoveChatMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveChatMessageResponse.ProtoReflect.Descriptor instead.
func (*RemoveChatMessageResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{45}
}

type SetChatSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled  bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Slowmode bool `protobuf:"varint,2,opt,name=slowmode,proto3" json:"slowmode,omitempty"`
}

func (x *SetChatSettingsRequest) Reset() {
	*x = SetChatSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChatSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChatSettingsRequest) ProtoMessage() {}

func (x *SetChatSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChatSettingsRequest.ProtoReflect.Descriptor instead.
func (*SetChatSettingsRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{46}
}

func (x *SetChatSettingsRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *SetChatSettingsRequest) GetSlowmode() bool {
	if x != nil {
		return x.Slowmode
	}
	return false
}

type SetChatSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetChatSettingsResponse) Reset() {
	*x = SetChatSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChatSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChatSettingsResponse) ProtoMessage() {}

func (x *SetChatSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChatSettingsResponse.ProtoReflect.Descriptor instead.
func (*SetChatSettingsResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{47}
}

type BanUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address         string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	RemoteAddress   string `protobuf:"bytes,2,opt,name=remote_address,json=remoteAddress,proto3" json:"remote_address,omitempty"`
	ChatBanned      bool   `protobuf:"varint,3,opt,name=chat_banned,json=chatBanned,proto3" json:"chat_banned,omitempty"`
	EnqueuingBanned bool   `protobuf:"varint,4,opt,name=enqueuing_banned,json=enqueuingBanned,proto3" json:"enqueuing_banned,omitempty"`
	RewardsBanned   bool   `protobuf:"varint,5,opt,name=rewards_banned,json=rewardsBanned,proto3" json:"rewards_banned,omitempty"`
	Reason          string `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *BanUserRequest) Reset() {
	*x = BanUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanUserRequest) ProtoMessage() {}

func (x *BanUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanUserRequest.ProtoReflect.Descriptor instead.
func (*BanUserRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{48}
}

func (x *BanUserRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BanUserRequest) GetRemoteAddress() string {
	if x != nil {
		return x.RemoteAddress
	}
	return ""
}

func (x *BanUserRequest) GetChatBanned() bool {
	if x != nil {
		return x.ChatBanned
	}
	return false
}

func (x *BanUserRequest) GetEnqueuingBanned() bool {
	if x != nil {
		return x.EnqueuingBanned
	}
	return false
}

func (x *BanUserRequest) GetRewardsBanned() bool {
	if x != nil {
		return x.RewardsBanned
	}
	return false
}

func (x *BanUserRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type BanUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BanIds []string `protobuf:"bytes,1,rep,name=ban_ids,json=banIds,proto3" json:"ban_ids,omitempty"`
}

func (x *BanUserResponse) Reset() {
	*x = BanUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanUserResponse) ProtoMessage() {}

func (x *BanUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanUserResponse.ProtoReflect.Descriptor instead.
func (*BanUserResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{49}
}

func (x *BanUserResponse) GetBanIds() []string {
	if x != nil {
		return x.BanIds
	}
	return nil
}

type RemoveBanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BanId  string `protobuf:"bytes,1,opt,name=ban_id,json=banId,proto3" json:"ban_id,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *RemoveBanRequest) Reset() {
	*x = RemoveBanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBanRequest) ProtoMessage() {}

func (x *RemoveBanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBanRequest.ProtoReflect.Descriptor instead.
func (*RemoveBanRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{50}
}

func (x *RemoveBanRequest) GetBanId() string {
	if x != nil {
		return x.BanId
	}
	return ""
}

func (x *RemoveBanRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type RemoveBanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveBanResponse) Reset() {
	*x = RemoveBanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBanResponse) ProtoMessage() {}

func (x *RemoveBanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBanResponse.ProtoReflect.Descriptor instead.
func (*RemoveBanResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{51}
}

type SetVideoEnqueuingEnabledRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allowed AllowedVideoEnqueuingType `protobuf:"varint,1,opt,name=allowed,proto3,enum=jungletv.AllowedVideoEnqueuingType" json:"allowed,omitempty"`
}

func (x *SetVideoEnqueuingEnabledRequest) Reset() {
	*x = SetVideoEnqueuingEnabledRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVideoEnqueuingEnabledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVideoEnqueuingEnabledRequest) ProtoMessage() {}

func (x *SetVideoEnqueuingEnabledRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVideoEnqueuingEnabledRequest.ProtoReflect.Descriptor instead.
func (*SetVideoEnqueuingEnabledRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{52}
}

func (x *SetVideoEnqueuingEnabledRequest) GetAllowed() AllowedVideoEnqueuingType {
	if x != nil {
		return x.Allowed
	}
	return AllowedVideoEnqueuingType_DISABLED
}

type SetVideoEnqueuingEnabledResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetVideoEnqueuingEnabledResponse) Reset() {
	*x = SetVideoEnqueuingEnabledResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVideoEnqueuingEnabledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVideoEnqueuingEnabledResponse) ProtoMessage() {}

func (x *SetVideoEnqueuingEnabledResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVideoEnqueuingEnabledResponse.ProtoReflect.Descriptor instead.
func (*SetVideoEnqueuingEnabledResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{53}
}

type UserChatMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	NumMessages uint32 `protobuf:"varint,2,opt,name=num_messages,json=numMessages,proto3" json:"num_messages,omitempty"`
}

func (x *UserChatMessagesRequest) Reset() {
	*x = UserChatMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChatMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChatMessagesRequest) ProtoMessage() {}

func (x *UserChatMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChatMessagesRequest.ProtoReflect.Descriptor instead.
func (*UserChatMessagesRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{54}
}

func (x *UserChatMessagesRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserChatMessagesRequest) GetNumMessages() uint32 {
	if x != nil {
		return x.NumMessages
	}
	return 0
}

type UserChatMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*ChatMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *UserChatMessagesResponse) Reset() {
	*x = UserChatMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChatMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChatMessagesResponse) ProtoMessage() {}

func (x *UserChatMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChatMessagesResponse.ProtoReflect.Descriptor instead.
func (*UserChatMessagesResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{55}
}

func (x *UserChatMessagesResponse) GetMessages() []*ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type SubmitProofOfWorkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Previous []byte `protobuf:"bytes,1,opt,name=previous,proto3" json:"previous,omitempty"`
	Work     []byte `protobuf:"bytes,2,opt,name=work,proto3" json:"work,omitempty"`
}

func (x *SubmitProofOfWorkRequest) Reset() {
	*x = SubmitProofOfWorkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitProofOfWorkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitProofOfWorkRequest) ProtoMessage() {}

func (x *SubmitProofOfWorkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitProofOfWorkRequest.ProtoReflect.Descriptor instead.
func (*SubmitProofOfWorkRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{56}
}

func (x *SubmitProofOfWorkRequest) GetPrevious() []byte {
	if x != nil {
		return x.Previous
	}
	return nil
}

func (x *SubmitProofOfWorkRequest) GetWork() []byte {
	if x != nil {
		return x.Work
	}
	return nil
}

type SubmitProofOfWorkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubmitProofOfWorkResponse) Reset() {
	*x = SubmitProofOfWorkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitProofOfWorkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitProofOfWorkResponse) ProtoMessage() {}

func (x *SubmitProofOfWorkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitProofOfWorkResponse.ProtoReflect.Descriptor instead.
func (*SubmitProofOfWorkResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{57}
}

type UserPermissionLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserPermissionLevelRequest) Reset() {
	*x = UserPermissionLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermissionLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermissionLevelRequest) ProtoMessage() {}

func (x *UserPermissionLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermissionLevelRequest.ProtoReflect.Descriptor instead.
func (*UserPermissionLevelRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{58}
}

type UserPermissionLevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermissionLevel PermissionLevel `protobuf:"varint,1,opt,name=permission_level,json=permissionLevel,proto3,enum=jungletv.PermissionLevel" json:"permission_level,omitempty"`
}

func (x *UserPermissionLevelResponse) Reset() {
	*x = UserPermissionLevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermissionLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermissionLevelResponse) ProtoMessage() {}

func (x *UserPermissionLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermissionLevelResponse.ProtoReflect.Descriptor instead.
func (*UserPermissionLevelResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{59}
}

func (x *UserPermissionLevelResponse) GetPermissionLevel() PermissionLevel {
	if x != nil {
		return x.PermissionLevel
	}
	return PermissionLevel_UNAUTHENTICATED
}

var File_jungletv_proto protoreflect.FileDescriptor

var file_jungletv_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x0d, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0xa3, 0x02, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a,
	0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a,
	0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75,
	0x6e, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x48, 0x00,
	0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x6f, 0x70, 0x65, 0x6e, 0x65,
	0x64, 0x42, 0x06, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x22, 0xa0, 0x01, 0x0a, 0x12, 0x53, 0x69,
	0x67, 0x6e, 0x49, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x4e, 0x0a, 0x23, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x21, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x17, 0x0a, 0x15,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x6f,
	0x70, 0x65, 0x6e, 0x65, 0x64, 0x22, 0x76, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x45, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1b, 0x0a,
	0x19, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x45, 0x6e,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x74, 0x75, 0x62, 0x44, 0x61, 0x74, 0x61, 0x22, 0xd2, 0x01, 0x0a, 0x13, 0x45, 0x6e, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x6e, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x75, 0x62, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76,
	0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x75, 0x62, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x08, 0x73, 0x74, 0x75, 0x62, 0x44, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x12,
	0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c,
	0x65, 0x74, 0x76, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x59, 0x6f, 0x75, 0x54, 0x75,
	0x62, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x10, 0x79,
	0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x0c, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x9d, 0x01,
	0x0a, 0x14, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74,
	0x76, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x39,
	0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00,
	0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x65, 0x6e, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a,
	0x13, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x82, 0x04, 0x0a, 0x12,
	0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x45, 0x6e,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x65, 0x78, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x6f, 0x77,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x6b, 0x69, 0x70,
	0x70, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x6e, 0x73,
	0x6b, 0x69, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x47, 0x0a, 0x20, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x6c, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x73,
	0x5f, 0x75, 0x6e, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x50, 0x6c, 0x61,
	0x79, 0x69, 0x6e, 0x67, 0x49, 0x73, 0x55, 0x6e, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x4f, 0x0a, 0x12, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x5f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x59, 0x6f,
	0x75, 0x54, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x10, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x0c, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x33, 0x0a, 0x14, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x70,
	0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x50, 0x6f, 0x77, 0x22, 0x14, 0x0a, 0x12, 0x4e, 0x6f,
	0x77, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x75, 0x62, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x2c, 0x0a, 0x1a, 0x4e, 0x6f, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x59, 0x6f,
	0x75, 0x54, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x85,
	0x05, 0x0a, 0x1a, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x5f, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x6c, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a,
	0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x4f, 0x0a, 0x12, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74,
	0x76, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x48, 0x02, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x08, 0x70,
	0x6f, 0x77, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4f, 0x66,
	0x57, 0x6f, 0x72, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x48, 0x03, 0x52, 0x07, 0x70, 0x6f, 0x77, 0x54,
	0x61, 0x73, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x09, 0x73, 0x74, 0x75, 0x62, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x75, 0x6e, 0x67,
	0x6c, 0x65, 0x74, 0x76, 0x2e, 0x4e, 0x6f, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x75, 0x62, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x73, 0x74, 0x75, 0x62, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x12, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x5f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x4e, 0x6f, 0x77, 0x50, 0x6c,
	0x61, 0x79, 0x69, 0x6e, 0x67, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x10, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0c, 0x0a, 0x0a, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6f,
	0x77, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x37, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x45, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4f, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5a, 0x0a,
	0x05, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65,
	0x74, 0x76, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x68, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x15, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0xa6, 0x02, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c,
	0x65, 0x74, 0x76, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x75,
	0x6e, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x75, 0x6e, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x4f, 0x0a,
	0x12, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6a, 0x75, 0x6e, 0x67,
	0x6c, 0x65, 0x74, 0x76, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62,
	0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x10, 0x79, 0x6f,
	0x75, 0x74, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0c,
	0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28,
	0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3b, 0x0a,
	0x12, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x29, 0x0a, 0x17, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x74, 0x0a, 0x1c, 0x46, 0x6f, 0x72, 0x63, 0x69, 0x62, 0x6c, 0x79, 0x45, 0x6e, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x44, 0x0a, 0x0c, 0x65, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65,
	0x74, 0x76, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45,
	0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x65, 0x6e, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x46, 0x6f, 0x72, 0x63, 0x69,
	0x62, 0x6c, 0x79, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x1e, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x22, 0x21,
	0x0a, 0x1f, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x46, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xe2, 0x02, 0x0a, 0x0a, 0x43, 0x68,
	0x61, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6a, 0x75, 0x6e,
	0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x0f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x0f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x75, 0x6e,
	0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xb5,
	0x02, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3e, 0x0a,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x44, 0x0a,
	0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74,
	0x76, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52,
	0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x53, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6a, 0x75, 0x6e, 0x67,
	0x6c, 0x65, 0x74, 0x76, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x2d, 0x0a, 0x11, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x49, 0x0a, 0x11, 0x43, 0x68,
	0x61, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x34, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x74, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x17, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2d, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x74, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x02, 0x30, 0x01, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13,
	0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e,
	0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1b,
	0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x0a, 0x16, 0x53,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x6c, 0x6f, 0x77, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x73, 0x6c, 0x6f, 0x77, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x53,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x0e, 0x42, 0x61, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x63, 0x68, 0x61, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x65,
	0x6e, 0x71, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x0f, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x49, 0x64,
	0x73, 0x22, 0x41, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60, 0x0a, 0x1f, 0x53, 0x65, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e,
	0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x22, 0x22, 0x0a, 0x20, 0x53,
	0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x56, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x4a, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4f, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x77, 0x6f,
	0x72, 0x6b, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x4f, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1c, 0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x63, 0x0a,
	0x1b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x10,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74,
	0x76, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x2a, 0x3d, 0x0a, 0x18, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a,
	0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x41,
	0x49, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10,
	0x02, 0x2a, 0x19, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0d, 0x0a,
	0x09, 0x4d, 0x4f, 0x44, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10, 0x00, 0x2a, 0x43, 0x0a, 0x17,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x51, 0x55, 0x45,
	0x55, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x4e, 0x45, 0x58,
	0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x4e, 0x4f, 0x57, 0x10,
	0x02, 0x2a, 0x40, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x4f, 0x44, 0x45,
	0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e,
	0x54, 0x10, 0x01, 0x2a, 0x46, 0x0a, 0x19, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x53, 0x54, 0x41, 0x46, 0x46, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x3b, 0x0a, 0x0f, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x13,
	0x0a, 0x0f, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x32, 0x8f, 0x0d, 0x0a, 0x08, 0x4a, 0x75, 0x6e,
	0x67, 0x6c, 0x65, 0x54, 0x56, 0x12, 0x3f, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12,
	0x17, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c,
	0x65, 0x74, 0x76, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4f, 0x0a, 0x0c, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1d, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74,
	0x76, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76,
	0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0d, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c,
	0x65, 0x74, 0x76, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c,
	0x65, 0x74, 0x76, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x57, 0x0a, 0x0c, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1d, 0x2e, 0x6a, 0x75, 0x6e,
	0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6a, 0x75, 0x6e, 0x67,
	0x6c, 0x65, 0x74, 0x76, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x42, 0x0a, 0x0c, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x12, 0x1d, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x49, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76,
	0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x70, 0x0a, 0x17, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x28, 0x2e,
	0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65,
	0x74, 0x76, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x12, 0x1c, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x58, 0x0a, 0x0f, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20,
	0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x4f, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x22, 0x2e, 0x6a, 0x75, 0x6e,
	0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x4f, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4f, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x2e, 0x6a,
	0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x15, 0x46,
	0x6f, 0x72, 0x63, 0x69, 0x62, 0x6c, 0x79, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e,
	0x46, 0x6f, 0x72, 0x63, 0x69, 0x62, 0x6c, 0x79, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6a,
	0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x69, 0x62, 0x6c, 0x79,
	0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x6a, 0x75,
	0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x6a, 0x75, 0x6e, 0x67,
	0x6c, 0x65, 0x74, 0x76, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x20, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65,
	0x74, 0x76, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6a, 0x75, 0x6e, 0x67,
	0x6c, 0x65, 0x74, 0x76, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73,
	0x0a, 0x18, 0x53, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75,
	0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x29, 0x2e, 0x6a, 0x75, 0x6e,
	0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x6e,
	0x71, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76,
	0x2e, 0x53, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x69,
	0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x07, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18,
	0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c,
	0x65, 0x74, 0x76, 0x2e, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42,
	0x61, 0x6e, 0x12, 0x1a, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a,
	0x10, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x21, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x6e, 0x79, 0x69, 0x6d, 0x2f, 0x6a,
	0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jungletv_proto_rawDescOnce sync.Once
	file_jungletv_proto_rawDescData = file_jungletv_proto_rawDesc
)

func file_jungletv_proto_rawDescGZIP() []byte {
	file_jungletv_proto_rawDescOnce.Do(func() {
		file_jungletv_proto_rawDescData = protoimpl.X.CompressGZIP(file_jungletv_proto_rawDescData)
	})
	return file_jungletv_proto_rawDescData
}

var file_jungletv_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_jungletv_proto_msgTypes = make([]protoimpl.MessageInfo, 60)
var file_jungletv_proto_goTypes = []interface{}{
	(EnqueueMediaTicketStatus)(0),            // 0: jungletv.EnqueueMediaTicketStatus
	(UserRole)(0),                            // 1: jungletv.UserRole
	(ForcedTicketEnqueueType)(0),             // 2: jungletv.ForcedTicketEnqueueType
	(ChatDisabledReason)(0),                  // 3: jungletv.ChatDisabledReason
	(AllowedVideoEnqueuingType)(0),           // 4: jungletv.AllowedVideoEnqueuingType
	(PermissionLevel)(0),                     // 5: jungletv.PermissionLevel
	(*SignInRequest)(nil),                    // 6: jungletv.SignInRequest
	(*SignInProgress)(nil),                   // 7: jungletv.SignInProgress
	(*SignInVerification)(nil),               // 8: jungletv.SignInVerification
	(*SignInAccountUnopened)(nil),            // 9: jungletv.SignInAccountUnopened
	(*SignInResponse)(nil),                   // 10: jungletv.SignInResponse
	(*SignInVerificationExpired)(nil),        // 11: jungletv.SignInVerificationExpired
	(*EnqueueYouTubeVideoData)(nil),          // 12: jungletv.EnqueueYouTubeVideoData
	(*EnqueueStubData)(nil),                  // 13: jungletv.EnqueueStubData
	(*EnqueueMediaRequest)(nil),              // 14: jungletv.EnqueueMediaRequest
	(*EnqueueMediaResponse)(nil),             // 15: jungletv.EnqueueMediaResponse
	(*EnqueueMediaFailure)(nil),              // 16: jungletv.EnqueueMediaFailure
	(*EnqueueMediaTicket)(nil),               // 17: jungletv.EnqueueMediaTicket
	(*MonitorTicketRequest)(nil),             // 18: jungletv.MonitorTicketRequest
	(*ConsumeMediaRequest)(nil),              // 19: jungletv.ConsumeMediaRequest
	(*NowPlayingStubData)(nil),               // 20: jungletv.NowPlayingStubData
	(*NowPlayingYouTubeVideoData)(nil),       // 21: jungletv.NowPlayingYouTubeVideoData
	(*MediaConsumptionCheckpoint)(nil),       // 22: jungletv.MediaConsumptionCheckpoint
	(*ActivityChallenge)(nil),                // 23: jungletv.ActivityChallenge
	(*ProofOfWorkTask)(nil),                  // 24: jungletv.ProofOfWorkTask
	(*MonitorQueueRequest)(nil),              // 25: jungletv.MonitorQueueRequest
	(*Queue)(nil),                            // 26: jungletv.Queue
	(*QueueYouTubeVideoData)(nil),            // 27: jungletv.QueueYouTubeVideoData
	(*QueueEntry)(nil),                       // 28: jungletv.QueueEntry
	(*User)(nil),                             // 29: jungletv.User
	(*RewardInfoRequest)(nil),                // 30: jungletv.RewardInfoRequest
	(*RewardInfoResponse)(nil),               // 31: jungletv.RewardInfoResponse
	(*RemoveQueueEntryRequest)(nil),          // 32: jungletv.RemoveQueueEntryRequest
	(*RemoveQueueEntryResponse)(nil),         // 33: jungletv.RemoveQueueEntryResponse
	(*ForciblyEnqueueTicketRequest)(nil),     // 34: jungletv.ForciblyEnqueueTicketRequest
	(*ForciblyEnqueueTicketResponse)(nil),    // 35: jungletv.ForciblyEnqueueTicketResponse
	(*SubmitActivityChallengeRequest)(nil),   // 36: jungletv.SubmitActivityChallengeRequest
	(*SubmitActivityChallengeResponse)(nil),  // 37: jungletv.SubmitActivityChallengeResponse
	(*ConsumeChatRequest)(nil),               // 38: jungletv.ConsumeChatRequest
	(*ChatUpdate)(nil),                       // 39: jungletv.ChatUpdate
	(*ChatMessage)(nil),                      // 40: jungletv.ChatMessage
	(*UserChatMessage)(nil),                  // 41: jungletv.UserChatMessage
	(*SystemChatMessage)(nil),                // 42: jungletv.SystemChatMessage
	(*ChatDisabledEvent)(nil),                // 43: jungletv.ChatDisabledEvent
	(*ChatEnabledEvent)(nil),                 // 44: jungletv.ChatEnabledEvent
	(*ChatMessageCreatedEvent)(nil),          // 45: jungletv.ChatMessageCreatedEvent
	(*ChatMessageDeletedEvent)(nil),          // 46: jungletv.ChatMessageDeletedEvent
	(*ChatHeartbeatEvent)(nil),               // 47: jungletv.ChatHeartbeatEvent
	(*SendChatMessageRequest)(nil),           // 48: jungletv.SendChatMessageRequest
	(*SendChatMessageResponse)(nil),          // 49: jungletv.SendChatMessageResponse
	(*RemoveChatMessageRequest)(nil),         // 50: jungletv.RemoveChatMessageRequest
	(*RemoveChatMessageResponse)(nil),        // 51: jungletv.RemoveChatMessageResponse
	(*SetChatSettingsRequest)(nil),           // 52: jungletv.SetChatSettingsRequest
	(*SetChatSettingsResponse)(nil),          // 53: jungletv.SetChatSettingsResponse
	(*BanUserRequest)(nil),                   // 54: jungletv.BanUserRequest
	(*BanUserResponse)(nil),                  // 55: jungletv.BanUserResponse
	(*RemoveBanRequest)(nil),                 // 56: jungletv.RemoveBanRequest
	(*RemoveBanResponse)(nil),                // 57: jungletv.RemoveBanResponse
	(*SetVideoEnqueuingEnabledRequest)(nil),  // 58: jungletv.SetVideoEnqueuingEnabledRequest
	(*SetVideoEnqueuingEnabledResponse)(nil), // 59: jungletv.SetVideoEnqueuingEnabledResponse
	(*UserChatMessagesRequest)(nil),          // 60: jungletv.UserChatMessagesRequest
	(*UserChatMessagesResponse)(nil),         // 61: jungletv.UserChatMessagesResponse
	(*SubmitProofOfWorkRequest)(nil),         // 62: jungletv.SubmitProofOfWorkRequest
	(*SubmitProofOfWorkResponse)(nil),        // 63: jungletv.SubmitProofOfWorkResponse
	(*UserPermissionLevelRequest)(nil),       // 64: jungletv.UserPermissionLevelRequest
	(*UserPermissionLevelResponse)(nil),      // 65: jungletv.UserPermissionLevelResponse
	(*timestamppb.Timestamp)(nil),            // 66: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),              // 67: google.protobuf.Duration
}
var file_jungletv_proto_depIdxs = []int32{
	8,  // 0: jungletv.SignInProgress.verification:type_name -> jungletv.SignInVerification
	10, // 1: jungletv.SignInProgress.response:type_name -> jungletv.SignInResponse
	11, // 2: jungletv.SignInProgress.expired:type_name -> jungletv.SignInVerificationExpired
	9,  // 3: jungletv.SignInProgress.account_unopened:type_name -> jungletv.SignInAccountUnopened
	66, // 4: jungletv.SignInVerification.expiration:type_name -> google.protobuf.Timestamp
	66, // 5: jungletv.SignInResponse.token_expiration:type_name -> google.protobuf.Timestamp
	13, // 6: jungletv.EnqueueMediaRequest.stub_data:type_name -> jungletv.EnqueueStubData
	12, // 7: jungletv.EnqueueMediaRequest.youtube_video_data:type_name -> jungletv.EnqueueYouTubeVideoData
	17, // 8: jungletv.EnqueueMediaResponse.ticket:type_name -> jungletv.EnqueueMediaTicket
	16, // 9: jungletv.EnqueueMediaResponse.failure:type_name -> jungletv.EnqueueMediaFailure
	0,  // 10: jungletv.EnqueueMediaTicket.status:type_name -> jungletv.EnqueueMediaTicketStatus
	66, // 11: jungletv.EnqueueMediaTicket.expiration:type_name -> google.protobuf.Timestamp
	27, // 12: jungletv.EnqueueMediaTicket.youtube_video_data:type_name -> jungletv.QueueYouTubeVideoData
	67, // 13: jungletv.MediaConsumptionCheckpoint.current_position:type_name -> google.protobuf.Duration
	29, // 14: jungletv.MediaConsumptionCheckpoint.requested_by:type_name -> jungletv.User
	23, // 15: jungletv.MediaConsumptionCheckpoint.activity_challenge:type_name -> jungletv.ActivityChallenge
	24, // 16: jungletv.MediaConsumptionCheckpoint.pow_task:type_name -> jungletv.ProofOfWorkTask
	20, // 17: jungletv.MediaConsumptionCheckpoint.stub_data:type_name -> jungletv.NowPlayingStubData
	21, // 18: jungletv.MediaConsumptionCheckpoint.youtube_video_data:type_name -> jungletv.NowPlayingYouTubeVideoData
	28, // 19: jungletv.Queue.entries:type_name -> jungletv.QueueEntry
	29, // 20: jungletv.QueueEntry.requested_by:type_name -> jungletv.User
	67, // 21: jungletv.QueueEntry.length:type_name -> google.protobuf.Duration
	27, // 22: jungletv.QueueEntry.youtube_video_data:type_name -> jungletv.QueueYouTubeVideoData
	1,  // 23: jungletv.User.roles:type_name -> jungletv.UserRole
	2,  // 24: jungletv.ForciblyEnqueueTicketRequest.enqueue_type:type_name -> jungletv.ForcedTicketEnqueueType
	43, // 25: jungletv.ChatUpdate.disabled:type_name -> jungletv.ChatDisabledEvent
	44, // 26: jungletv.ChatUpdate.enabled:type_name -> jungletv.ChatEnabledEvent
	45, // 27: jungletv.ChatUpdate.message_created:type_name -> jungletv.ChatMessageCreatedEvent
	46, // 28: jungletv.ChatUpdate.message_deleted:type_name -> jungletv.ChatMessageDeletedEvent
	47, // 29: jungletv.ChatUpdate.heartbeat:type_name -> jungletv.ChatHeartbeatEvent
	66, // 30: jungletv.ChatMessage.created_at:type_name -> google.protobuf.Timestamp
	41, // 31: jungletv.ChatMessage.user_message:type_name -> jungletv.UserChatMessage
	42, // 32: jungletv.ChatMessage.system_message:type_name -> jungletv.SystemChatMessage
	40, // 33: jungletv.ChatMessage.reference:type_name -> jungletv.ChatMessage
	29, // 34: jungletv.UserChatMessage.author:type_name -> jungletv.User
	3,  // 35: jungletv.ChatDisabledEvent.reason:type_name -> jungletv.ChatDisabledReason
	40, // 36: jungletv.ChatMessageCreatedEvent.message:type_name -> jungletv.ChatMessage
	4,  // 37: jungletv.SetVideoEnqueuingEnabledRequest.allowed:type_name -> jungletv.AllowedVideoEnqueuingType
	40, // 38: jungletv.UserChatMessagesResponse.messages:type_name -> jungletv.ChatMessage
	5,  // 39: jungletv.UserPermissionLevelResponse.permission_level:type_name -> jungletv.PermissionLevel
	6,  // 40: jungletv.JungleTV.SignIn:input_type -> jungletv.SignInRequest
	14, // 41: jungletv.JungleTV.EnqueueMedia:input_type -> jungletv.EnqueueMediaRequest
	18, // 42: jungletv.JungleTV.MonitorTicket:input_type -> jungletv.MonitorTicketRequest
	19, // 43: jungletv.JungleTV.ConsumeMedia:input_type -> jungletv.ConsumeMediaRequest
	25, // 44: jungletv.JungleTV.MonitorQueue:input_type -> jungletv.MonitorQueueRequest
	30, // 45: jungletv.JungleTV.RewardInfo:input_type -> jungletv.RewardInfoRequest
	36, // 46: jungletv.JungleTV.SubmitActivityChallenge:input_type -> jungletv.SubmitActivityChallengeRequest
	38, // 47: jungletv.JungleTV.ConsumeChat:input_type -> jungletv.ConsumeChatRequest
	48, // 48: jungletv.JungleTV.SendChatMessage:input_type -> jungletv.SendChatMessageRequest
	62, // 49: jungletv.JungleTV.SubmitProofOfWork:input_type -> jungletv.SubmitProofOfWorkRequest
	64, // 50: jungletv.JungleTV.UserPermissionLevel:input_type -> jungletv.UserPermissionLevelRequest
	34, // 51: jungletv.JungleTV.ForciblyEnqueueTicket:input_type -> jungletv.ForciblyEnqueueTicketRequest
	32, // 52: jungletv.JungleTV.RemoveQueueEntry:input_type -> jungletv.RemoveQueueEntryRequest
	50, // 53: jungletv.JungleTV.RemoveChatMessage:input_type -> jungletv.RemoveChatMessageRequest
	52, // 54: jungletv.JungleTV.SetChatSettings:input_type -> jungletv.SetChatSettingsRequest
	58, // 55: jungletv.JungleTV.SetVideoEnqueuingEnabled:input_type -> jungletv.SetVideoEnqueuingEnabledRequest
	54, // 56: jungletv.JungleTV.BanUser:input_type -> jungletv.BanUserRequest
	56, // 57: jungletv.JungleTV.RemoveBan:input_type -> jungletv.RemoveBanRequest
	60, // 58: jungletv.JungleTV.UserChatMessages:input_type -> jungletv.UserChatMessagesRequest
	7,  // 59: jungletv.JungleTV.SignIn:output_type -> jungletv.SignInProgress
	15, // 60: jungletv.JungleTV.EnqueueMedia:output_type -> jungletv.EnqueueMediaResponse
	17, // 61: jungletv.JungleTV.MonitorTicket:output_type -> jungletv.EnqueueMediaTicket
	22, // 62: jungletv.JungleTV.ConsumeMedia:output_type -> jungletv.MediaConsumptionCheckpoint
	26, // 63: jungletv.JungleTV.MonitorQueue:output_type -> jungletv.Queue
	31, // 64: jungletv.JungleTV.RewardInfo:output_type -> jungletv.RewardInfoResponse
	37, // 65: jungletv.JungleTV.SubmitActivityChallenge:output_type -> jungletv.SubmitActivityChallengeResponse
	39, // 66: jungletv.JungleTV.ConsumeChat:output_type -> jungletv.ChatUpdate
	49, // 67: jungletv.JungleTV.SendChatMessage:output_type -> jungletv.SendChatMessageResponse
	63, // 68: jungletv.JungleTV.SubmitProofOfWork:output_type -> jungletv.SubmitProofOfWorkResponse
	65, // 69: jungletv.JungleTV.UserPermissionLevel:output_type -> jungletv.UserPermissionLevelResponse
	35, // 70: jungletv.JungleTV.ForciblyEnqueueTicket:output_type -> jungletv.ForciblyEnqueueTicketResponse
	33, // 71: jungletv.JungleTV.RemoveQueueEntry:output_type -> jungletv.RemoveQueueEntryResponse
	51, // 72: jungletv.JungleTV.RemoveChatMessage:output_type -> jungletv.RemoveChatMessageResponse
	53, // 73: jungletv.JungleTV.SetChatSettings:output_type -> jungletv.SetChatSettingsResponse
	59, // 74: jungletv.JungleTV.SetVideoEnqueuingEnabled:output_type -> jungletv.SetVideoEnqueuingEnabledResponse
	55, // 75: jungletv.JungleTV.BanUser:output_type -> jungletv.BanUserResponse
	57, // 76: jungletv.JungleTV.RemoveBan:output_type -> jungletv.RemoveBanResponse
	61, // 77: jungletv.JungleTV.UserChatMessages:output_type -> jungletv.UserChatMessagesResponse
	59, // [59:78] is the sub-list for method output_type
	40, // [40:59] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_jungletv_proto_init() }
func file_jungletv_proto_init() {
	if File_jungletv_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jungletv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInVerification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInAccountUnopened); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInVerificationExpired); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueYouTubeVideoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueStubData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueMediaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueMediaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueMediaFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueMediaTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumeMediaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NowPlayingStubData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NowPlayingYouTubeVideoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaConsumptionCheckpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProofOfWorkTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Queue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueYouTubeVideoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveQueueEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveQueueEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForciblyEnqueueTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForciblyEnqueueTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitActivityChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitActivityChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumeChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatDisabledEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatEnabledEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageCreatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageDeletedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatHeartbeatEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChatMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChatMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveChatMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveChatMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChatSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChatSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveBanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveBanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVideoEnqueuingEnabledRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVideoEnqueuingEnabledResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChatMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChatMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitProofOfWorkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitProofOfWorkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPermissionLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPermissionLevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_jungletv_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*SignInProgress_Verification)(nil),
		(*SignInProgress_Response)(nil),
		(*SignInProgress_Expired)(nil),
		(*SignInProgress_AccountUnopened)(nil),
	}
	file_jungletv_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*EnqueueMediaRequest_StubData)(nil),
		(*EnqueueMediaRequest_YoutubeVideoData)(nil),
	}
	file_jungletv_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*EnqueueMediaResponse_Ticket)(nil),
		(*EnqueueMediaResponse_Failure)(nil),
	}
	file_jungletv_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*EnqueueMediaTicket_YoutubeVideoData)(nil),
	}
	file_jungletv_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*MediaConsumptionCheckpoint_StubData)(nil),
		(*MediaConsumptionCheckpoint_YoutubeVideoData)(nil),
	}
	file_jungletv_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*QueueEntry_YoutubeVideoData)(nil),
	}
	file_jungletv_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*ChatUpdate_Disabled)(nil),
		(*ChatUpdate_Enabled)(nil),
		(*ChatUpdate_MessageCreated)(nil),
		(*ChatUpdate_MessageDeleted)(nil),
		(*ChatUpdate_Heartbeat)(nil),
	}
	file_jungletv_proto_msgTypes[34].OneofWrappers = []interface{}{
		(*ChatMessage_UserMessage)(nil),
		(*ChatMessage_SystemMessage)(nil),
	}
	file_jungletv_proto_msgTypes[42].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jungletv_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   60,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jungletv_proto_goTypes,
		DependencyIndexes: file_jungletv_proto_depIdxs,
		EnumInfos:         file_jungletv_proto_enumTypes,
		MessageInfos:      file_jungletv_proto_msgTypes,
	}.Build()
	File_jungletv_proto = out.File
	file_jungletv_proto_rawDesc = nil
	file_jungletv_proto_goTypes = nil
	file_jungletv_proto_depIdxs = nil
}
